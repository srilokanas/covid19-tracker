{"version":3,"sources":["components/InfoBox.js","components/LineGraph.js","components/Table.js","util.js","components/Map.js","App.js","index.js"],"names":["InfoBox","title","cases","active","isGreen","total","onClick","Card","className","CardContent","Typography","color","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","LineGraph","casesType","useState","data","setData","buildChartData","caseType","lastPoint","chartData","date","newPoint","x","y","push","useEffect","fetchData","fetch","then","response","json","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","length","datasets","backgroundColor","borderColor","Table","countries","map","country","casesTypeColors","hex","multiplier","recovered","deaths","showDataOnMap","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","sortData","sort","a","b","prettyPrintStat","stat","Map","zoom","MapContainer","TileLayer","url","attribution","App","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","getCountriesData","name","iso2","sortedData","console","log","onCountryChange","e","countryCode","target","FormControl","Select","variant","onChange","MenuItem","isRed","todayCases","todayRecovered","todayDeaths","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.cf149b80.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport './InfoBox.css'\n\nconst InfoBox = ({ title, cases, active, isGreen, total, onClick }) => {\n    return (\n        <Card onClick={onClick} className={`infoBox ${active && \"infoBox--selected\"}`}>\n            <CardContent>\n                <Typography className=\"infoBox__title\" color=\"textSecondary\">\n                    {title}\n                </Typography>\n                <h2 className={`infoBox__cases ${isGreen && \"infoBox__cases--green\"}`}>{cases}</h2>\n                <Typography className=\"infoBox__total\" color=\"textSecondary\">\n                    {total} Total\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default InfoBox\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst LineGraph = ({ casesType = \"cases\" }) => {\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, caseType) => {\n    const chartData = [];\n    let lastPoint;\n    for (let date in data.cases) {\n      if (lastPoint) {\n        const newPoint = {\n          x: date,\n          y: data[caseType][date] - lastPoint\n        };\n        chartData.push(newPoint);\n      }\n      lastPoint = data[caseType][date];\n    }\n    return chartData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => response.json())\n        .then((data) => {\n          const chartData = buildChartData(data, casesType);\n          setData(chartData);\n        });\n    };\n    fetchData();\n  }, [casesType]);\n\n  const options = {\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        }\n      }\n    },\n    scales: {\n      xAxes: [\n        {\n          type: \"time\",\n          time: {\n            format: \"MM/DD/YY\",\n            tooltipFormat: \"ll\"\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            display: false\n          },\n          ticks: {\n            callback: function (value, index, values) {\n              return numeral(value).format(\"0a\");\n            }\n          }\n        }\n      ]\n    }\n  };\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          options={options}\n          data={{\n            datasets: [\n              {\n                label: casesType,\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data\n              }\n            ]\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LineGraph;\n","import React from \"react\";\nimport \"./Table.css\";\nimport numeral from \"numeral\";\n\nconst Table = ({ countries }) => {\n  return (\n    <div className=\"table\">\n      {countries.map(({ country, cases }) => (\n        <tr key={country}>\n          <td>{country}</td>\n          <td>\n            <strong>{numeral(cases).format(\"0,0\")}</strong>\n          </td>\n        </tr>\n      ))}\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n    cases: {\n        hex: \"#1d52d7\",\n        multiplier: 300,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        multiplier: 400,\n    },\n    deaths: {\n        hex: \"#fb4443\",\n        multiplier: 2000,\n    },\n};\n\nexport const showDataOnMap = (data, casesType = \"cases\") => \n    data.map(country => (\n        <Circle\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            color={casesTypeColors[casesType].hex}\n            fillColor={casesTypeColors[casesType].hex}\n            fillOpacity={0.4}\n            radius={Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier}\n        >\n            <Popup>\n                <div className=\"info-container\">\n                    <div\n                        className=\"info-flag\"\n                        style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n                    ></div>\n                    <div className=\"info-name\">{country.country}</div>\n                    <div className=\"info-confirmed\">\n                        Cases: {numeral(country.cases).format(\"0,0\")}\n                    </div>\n                    <div className=\"info-recovered\">\n                        Recovered: {numeral(country.recovered).format(\"0,0\")}\n                    </div>\n                    <div className=\"info-deaths\">\n                        Deaths: {numeral(country.deaths).format(\"0,0\")}\n                    </div>\n                </div>\n            </Popup>\n        </Circle>\n    ))\n\n\n\nexport const sortData = (data) => {\n    const sortedData = [...data]\n    return sortedData.sort((a, b) =>  a.cases > b.cases ? -1 : 1)\n}\n\nexport const prettyPrintStat = (stat) => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";","import React from 'react'\nimport { MapContainer, TileLayer } from \"react-leaflet\";\nimport \"./Map.css\";\nimport { showDataOnMap } from '../util';\n\nconst Map = ({ countries, casesType, center, zoom }) => {\n    return (\n        <div className=\"map\">\n            <MapContainer center={center} zoom={zoom}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {showDataOnMap(countries, casesType)}\n            </MapContainer>\n        </div>\n    )\n}\n\nexport default Map\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport InfoBox from \"./components/InfoBox\";\nimport LineGraph from \"./components/LineGraph\";\nimport Table from \"./components/Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./components/Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem key={country.value} value={country.value}>\n                  {country.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}